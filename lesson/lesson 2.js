// Задание 1. Почему код дает именно такие результаты?

var a = 1, b = 1, c, d;

c = ++a; console.log(c);
2 — переменной "с" присваиваем дважды инкрементированную переменную "а".
    d = b++; console.log(d);
1 — постфиксная форма возвращает значение до увеличения числа.
    c = (2 + ++a); console.log(c);
5 — к 2 прибавляем инкремент "а", значение которого после примера 1 == 2, т.е. 2 + (1 + 2) = 5.
d = (2 + b++); console.log(d);
4 — к 2 прибавляем инкремент "b", значение которого после примера 2, но за счет постфиксной формы сумма вычисляется со "старым" значением b.
    console.log(a);
3 — переменную "а" мы инкрементировали дважды, в примере 1 и 3.
console.log(b);
3 — переменную "b" мы инкрементировали дважды, в примере 2 и 4.



// Задание 2. Чему будет равен x в примере ниже?

var a = 2;
var x = 1 + (a *= 2);
console.log(x);

5 == 1 + 2 * 2



// Задание 3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения.
// Затем написать скрипт, который работает по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму;
// ноль можно считать положительным числом.

let a = -3;
let b = 17;

if (a >= 0 && b >= 0) {
    console.log(a - b);
} else if (a < 0 && b < 0) {
    console.log(a * b);
} else {
    console.log(a + b);
}
